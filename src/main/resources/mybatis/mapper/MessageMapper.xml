<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.dao.mapper.MessageTwoMapper">
  <resultMap id="BaseResultMap" type="com.hy.domain.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="uname" jdbcType="VARCHAR" property="uname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="CHAR" property="phone" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hy.domain.Message">
    insert into message (id, content, uname, 
      email, phone)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hy.domain.Message">
    update message
    set content = #{content,jdbcType=VARCHAR},
      uname = #{uname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, content, uname, email, phone
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, content, uname, email, phone
    from message
  </select>
</mapper>